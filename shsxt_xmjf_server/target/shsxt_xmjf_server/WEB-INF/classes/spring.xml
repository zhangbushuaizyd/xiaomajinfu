<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://code.alibabatech.com/schema/dubbo
    http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <context:component-scan base-package="com.shsxt.xmjf.server"></context:component-scan>


    <!--
     加载jdbc.properties 文件
  -->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>

    <!--
     数据源c3p0
    -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"></property>
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="user" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!--
     开启aop 环境
   -->
    <aop:aspectj-autoproxy/>

    <!--
     事物管理器
   -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--
         配置事物通知
       -->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <!--
              对更新方法进行增强:引入事物控制
            -->
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="del*" propagation="REQUIRED"/>
            <tx:method name="query*" read-only="true"></tx:method>
            <tx:method name="get*" read-only="true"></tx:method>
        </tx:attributes>
    </tx:advice>


    <!--
      aop 基本配置
    -->
    <aop:config>
        <!--
          通常配置的拦截规则:service 方法
        -->
        <aop:pointcut id="cut" expression="execution (* com.shsxt.xmjf.server.service..*.*(..))"></aop:pointcut>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="cut"></aop:advisor>
    </aop:config>

    <!-- 配置 sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="configLocation" value="classpath:mybatis.xml"/>
        <property name="mapperLocations" value="classpath:com/shsxt/xmjf/server/db/mappers/*.xml"/>
    </bean>

    <bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描com.shsxthsxt.dao这个包以及它的子包下的所有映射接口类 -->
        <property name="basePackage" value="com.shsxt.xmjf.server.db.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!--
         redis 配置
      -->
    <!-- 连接池配置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- 最大连接数  -->
        <property name="maxTotal" value="1024"/>
        <!-- 最大 空闲连接数 -->
        <property name="maxIdle" value="200"/>
        <!-- 获取连接时最大等待毫秒数 -->
        <property name="maxWaitMillis" value="10000"/>
        <!-- 在获取连接时检查有效性 -->
        <property name="testOnBorrow" value="true"/>
    </bean>

    <!-- 客户端连接工厂 -->

    <bean id="jedisConnFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:use-pool="true" p:host-name="192.168.18.50" p:port="6380" p:password="123456">
        <!-- 连接池引用 -->
        <constructor-arg name="poolConfig" ref="jedisPoolConfig"/>
    </bean>


    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
          p:connection-factory-ref="jedisConnFactory">
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
        </property>
        <property name="hashKeySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
        </property>
    </bean>
    <!--
        dubbo
    -->
    <!--
       应用名称
    -->
    <dubbo:application name="shsxt_xmjf_server"></dubbo:application>
    <!--
       注册中心
    -->
    <dubbo:registry address="zookeeper://192.168.18.50:2181"></dubbo:registry>
    <!--
       配置协议
    -->
    <dubbo:protocol name="dubbo" port="20880"></dubbo:protocol>

    <!--
      配置注册的服务
    -->
    <dubbo:service interface="com.shsxt.xmjf.api.service.IUserService" ref="userServiceImpl"></dubbo:service>

    <dubbo:service interface="com.shsxt.xmjf.api.service.ISmsService" ref="smsServiceImpl"></dubbo:service>

    <dubbo:service interface="com.shsxt.xmjf.api.service.IBasItemService" ref="basItemServiceImpl"></dubbo:service>

    <dubbo:service interface="com.shsxt.xmjf.api.service.IBusAccountService" ref="busAccountServiceImpl"></dubbo:service>
    <dubbo:service interface="com.shsxt.xmjf.api.service.IBasUserSecurityService" ref="basUserSecurityServiceImpl"></dubbo:service>
    <dubbo:service interface="com.shsxt.xmjf.api.service.IBusItemLoanService" ref="busItemLoanServiceImpl"></dubbo:service>

    <dubbo:service interface="com.shsxt.xmjf.api.service.ISysPictureService" ref="sysPictureServiceImpl"></dubbo:service>

    <dubbo:service interface="com.shsxt.xmjf.api.service.IBusItemInvestService" ref="busItemInvestServiceImpl"></dubbo:service>
    <dubbo:service interface="com.shsxt.xmjf.api.service.IBusAccountRechargeService" ref="busAccountRechargeServiceImpl"></dubbo:service>


</beans>